compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

dependencies {

    // REST-Resource related Dependencies
    compileOnly 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly "org.springframework.boot:spring-boot-starter-data-jpa"

    //Mapping
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

    implementation 'org.springdoc:springdoc-openapi-ui:1.5.2'

    //Commons
    implementation 'commons-io:commons-io:2.7'

    testImplementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation "org.springframework.boot:spring-boot-starter-data-jpa"
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'com.h2database:h2:1.3.148'

}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        publishCore(MavenPublication) {
            from components.java
            groupId 'io.miragon.bpmrepo.citest'
            artifactId 'core'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'miragon bpm repo core')
                root.appendNode('name', 'bpm-repo-core')
                root.appendNode('url', 'https://github.com/FlowSquad/bpm-repo/tree/master/core')
                root.children().last() + pomConfig
            }
        }
    }
}

/*
signing {
    sign publishing.publications.publishCore
}
*/
