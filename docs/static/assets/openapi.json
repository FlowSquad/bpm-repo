{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8089",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/share/team": {
      "put": {
        "tags": [
          "Share"
        ],
        "summary": "Update the share-role of a relation with a team",
        "operationId": "UpdateShareWithTeam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareWithTeamTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ShareWithTeamTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Share"
        ],
        "summary": "Share an artifact with all members of another team",
        "operationId": "shareWithTeam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareWithTeamTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ShareWithTeamTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/share/repository": {
      "put": {
        "tags": [
          "Share"
        ],
        "summary": "Update the share-role of a relation with a repository",
        "operationId": "UpdateShareWithRepository",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareWithRepositoryTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ShareWithRepositoryTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Share"
        ],
        "summary": "Share an artifact with all members of another repository",
        "operationId": "shareWithRepository",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareWithRepositoryTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ShareWithRepositoryTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/repoAssignment": {
      "put": {
        "tags": [
          "RepoAssignment"
        ],
        "summary": "Update user assignment to repository",
        "operationId": "updateUserAssignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RepoAssignment"
        ],
        "summary": "Create user assignment to repository",
        "operationId": "createUserAssignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/repo/{repositoryId}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "summary": "Get a single Repository by providing its ID",
        "operationId": "getSingleRepository",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Repository"
        ],
        "summary": "Update a Repository",
        "operationId": "updateRepository",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryUpdateTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Repository"
        ],
        "summary": "Delete a Repository if you own it",
        "operationId": "deleteRepository",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/milestone/update": {
      "put": {
        "tags": [
          "Milestone"
        ],
        "summary": "Update milestone of the artifact. (The artifact has to be locked by the user to use this endpoint)",
        "operationId": "updateMilestone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtifactMilestoneUpdateTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactMilestoneTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact/{artifactId}": {
      "get": {
        "tags": [
          "Artifact"
        ],
        "summary": "Get single artifact",
        "operationId": "getArtifact",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Artifact"
        ],
        "summary": "Update an artifact",
        "operationId": "updateArtifact",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtifactUpdateTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Artifact"
        ],
        "summary": "Delete one Artifact and all of its versions",
        "operationId": "deleteArtifact",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/multiple": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Get a list of users by providing their Ids",
        "operationId": "getMultipleUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfoTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/create": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new User",
        "operationId": "createUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/repo": {
      "get": {
        "tags": [
          "Repository"
        ],
        "summary": "Get all Repositories",
        "operationId": "getAllRepositories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RepositoryTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Repository"
        ],
        "summary": "Create a new Repository",
        "operationId": "createRepository",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRepositoryTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/milestone/{artifactId}": {
      "post": {
        "tags": [
          "Milestone"
        ],
        "summary": "Create a new milestone of the artifact. (The artifact has to be locked by the user to use this endpoint)",
        "operationId": "createMilestone",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtifactMilestoneUploadTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactMilestoneTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/milestone/deployments": {
      "post": {
        "tags": [
          "Milestone"
        ],
        "summary": "Get milestones by providing deploymentIds",
        "operationId": "getAllByDeploymentIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactMilestoneTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/deploy": {
      "post": {
        "tags": [
          "Deployment"
        ],
        "summary": "Deploy artifact milestone",
        "operationId": "deployMilestone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDeploymentTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactMilestoneTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/deploy/list": {
      "post": {
        "tags": [
          "Deployment"
        ],
        "summary": "Deploy multiple milestones",
        "operationId": "deployMultipleMilestones",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NewDeploymentTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactMilestoneTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact/{repositoryId}": {
      "post": {
        "tags": [
          "Artifact"
        ],
        "summary": "Create an artifact",
        "operationId": "createArtifact",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewArtifactTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact/{artifactId}/unlock": {
      "post": {
        "tags": [
          "Artifact"
        ],
        "summary": "Unlock a artifact after editing is finished",
        "operationId": "unlockArtifact",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact/{artifactId}/lock": {
      "post": {
        "tags": [
          "Artifact"
        ],
        "summary": "Lock a Artifact for editing. After calling, the artifact is locked for 10 minutes for the active user. Call the endpoint again, to reset the 10-minutes timer. Has to be called before \"getSingleVersion\" and \"createOrUpdateVersion\"",
        "operationId": "lockArtifact",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact/starred/{artifactId}": {
      "post": {
        "tags": [
          "Artifact"
        ],
        "summary": "Inverts the star-status (favorite-status) of an artifact",
        "operationId": "setStarred",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/artifact/copy/{repositoryId}/{artifactId}": {
      "post": {
        "tags": [
          "Artifact"
        ],
        "summary": "Copy file to other repository",
        "operationId": "copyToRepository",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtifactUpdateTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/search/{typedName}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Returns a list of users that matches the typed letters of a search",
        "operationId": "searchUsers",
        "parameters": [
          {
            "name": "typedName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfoTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/registeredEmail": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Returns the namae of the user that is currently sending requests (name equals email address)",
        "operationId": "getUserName",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/currentUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Returns the User that is currently sending requests",
        "operationId": "getUserInfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/share/repository/{repositoryId}": {
      "get": {
        "tags": [
          "Share"
        ],
        "summary": "Get Artifacts shared with Repository",
        "operationId": "getSharedArtifacts",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/share/repository/{repositoryId}/type/{type}": {
      "get": {
        "tags": [
          "Share"
        ],
        "summary": "Get shared artifacts from repository by type",
        "operationId": "getSharedArtifactsFromRepositoryByType",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/share/relations/repository/{artifactId}": {
      "get": {
        "tags": [
          "Share"
        ],
        "summary": "Get all repositories that can access a specific artifact (Admin permission required)",
        "operationId": "getSharedRepositories",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SharedRepositoryTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/share/artifacts": {
      "get": {
        "tags": [
          "Share"
        ],
        "summary": "Get all shared Artifacts",
        "operationId": "getAllSharedArtifacts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/share/artifacts/{type}": {
      "get": {
        "tags": [
          "Share"
        ],
        "summary": "Get all artifacts that are shared via diverse repositories and filter by artifactType",
        "operationId": "getSharedArtifactsByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/repoAssignment/{repositoryId}": {
      "get": {
        "tags": [
          "RepoAssignment"
        ],
        "summary": "Get all users assigned to a repository",
        "operationId": "getAllAssignedUsers",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/repo/search/{typedName}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "summary": "Search for repositories by name",
        "operationId": "searchRepositories",
        "parameters": [
          {
            "name": "typedName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RepositoryTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/repo/administration": {
      "get": {
        "tags": [
          "Repository"
        ],
        "summary": "Get all repositories that can be managed",
        "operationId": "getManageableRepositories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RepositoryTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/milestone/{artifactId}/{milestoneId}/download": {
      "get": {
        "tags": [
          "Milestone"
        ],
        "summary": "Download a specific milestone",
        "operationId": "downloadMilestone",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "milestoneId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/milestone/{artifactId}/milestone": {
      "get": {
        "tags": [
          "Milestone"
        ],
        "summary": "Get all milestones of the artifact",
        "operationId": "getAllMilestones",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactMilestoneTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/milestone/{artifactId}/milestoneNumber/{milestone}": {
      "get": {
        "tags": [
          "Milestone"
        ],
        "summary": "Get the latest milestone of the requested milestone, read-permission granted even if Artifact is locked",
        "operationId": "getByMilestoneNumber",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "milestone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactMilestoneTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/milestone/{artifactId}/milestone/{milestoneId}": {
      "get": {
        "tags": [
          "Milestone"
        ],
        "summary": "Get a specific milestone, read-permission granted even if Artifact is locked",
        "operationId": "getMilestone",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "milestoneId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactMilestoneTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/milestone/{artifactId}/milestone/latest": {
      "get": {
        "tags": [
          "Milestone"
        ],
        "summary": "Return the latest milestone of the requested artifact",
        "operationId": "getLatestMilestone",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactMilestoneTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/deploy/target": {
      "get": {
        "tags": [
          "Deployment"
        ],
        "summary": "Get all available deployment targets",
        "operationId": "getAllDeploymentTargets",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/deploy/repository/{repositoryId}": {
      "get": {
        "tags": [
          "Deployment"
        ],
        "summary": "Get all deployments of a repository",
        "operationId": "getAllDeploymentsFromRepository",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeploymentTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact": {
      "get": {
        "tags": [
          "Artifact"
        ],
        "summary": "Get all available file types",
        "operationId": "getAllFileTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactTypeTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact/{repositoryId}/{type}": {
      "get": {
        "tags": [
          "Artifact"
        ],
        "summary": "Get all artifacts of a specific type from a repository",
        "operationId": "getByRepoIdAndType",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact/starred": {
      "get": {
        "tags": [
          "Artifact"
        ],
        "summary": "Returns all starred artifacts.",
        "operationId": "getStarred",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact/search/{typedTitle}": {
      "get": {
        "tags": [
          "Artifact"
        ],
        "summary": "Search artifacts by title.",
        "operationId": "searchArtifacts",
        "parameters": [
          {
            "name": "typedTitle",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact/repository/{repositoryId}": {
      "get": {
        "tags": [
          "Artifact"
        ],
        "summary": "Get all artifacts of the given repository",
        "operationId": "getArtifactsFromRepo",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/artifact/recent": {
      "get": {
        "tags": [
          "Artifact"
        ],
        "summary": "Get recent artifacts",
        "operationId": "getRecent",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtifactTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/share/team/unshare/{artifactId}/{teamId}": {
      "delete": {
        "tags": [
          "Share"
        ],
        "summary": "Delete the sharing-relation to a specific repository",
        "operationId": "unshareArtifactWithTeam",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/share/repository/unshare/{artifactId}/{repositoryId}": {
      "delete": {
        "tags": [
          "Share"
        ],
        "summary": "Delete the sharing-relation to a specific repository",
        "operationId": "unshareArtifactWithRepository",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/repoAssignment/{repositoryId}/{userId}": {
      "delete": {
        "tags": [
          "RepoAssignment"
        ],
        "summary": "Delete user assignment to repository",
        "operationId": "deleteUserAssignment",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ShareWithTeamTO": {
        "required": [
          "artifactId",
          "role",
          "teamId"
        ],
        "type": "object",
        "properties": {
          "artifactId": {
            "type": "string"
          },
          "teamId": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "OWNER",
              "ADMIN",
              "MEMBER",
              "VIEWER"
            ]
          }
        },
        "description": "Share-relation between an artifact an a team"
      },
      "ShareWithRepositoryTO": {
        "required": [
          "artifactId",
          "repositoryId",
          "role"
        ],
        "type": "object",
        "properties": {
          "artifactId": {
            "type": "string"
          },
          "repositoryId": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "OWNER",
              "ADMIN",
              "MEMBER",
              "VIEWER"
            ]
          }
        }
      },
      "AssignmentTO": {
        "required": [
          "repositoryId",
          "role",
          "userId"
        ],
        "type": "object",
        "properties": {
          "repositoryId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "OWNER",
              "ADMIN",
              "MEMBER",
              "VIEWER"
            ]
          }
        },
        "description": "Containing information about a user-repository relation"
      },
      "RepositoryUpdateTO": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RepositoryTO": {
        "required": [
          "assignedUsers",
          "description",
          "existingArtifacts",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "existingArtifacts": {
            "type": "integer",
            "format": "int32"
          },
          "assignedUsers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Containing information about a repository"
      },
      "ArtifactMilestoneUpdateTO": {
        "type": "object",
        "properties": {
          "milestoneId": {
            "type": "string"
          },
          "file": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          }
        },
        "description": "Client created Object for updating accessible properties of a version"
      },
      "ArtifactMilestoneTO": {
        "required": [
          "artifactId",
          "deployments",
          "file",
          "id",
          "latestMilestone",
          "milestone",
          "repositoryId",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "milestone": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "artifactId": {
            "type": "string"
          },
          "latestMilestone": {
            "type": "boolean"
          },
          "repositoryId": {
            "type": "string"
          },
          "deployments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentTO"
            }
          }
        },
        "description": "version of an artifact, contains the file and information about deployments"
      },
      "DeploymentTO": {
        "required": [
          "artifactId",
          "id",
          "repositoryId",
          "target",
          "timestamp",
          "user"
        ],
        "type": "object",
        "properties": {
          "repositoryId": {
            "type": "string"
          },
          "artifactId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Containing information about the deployment of an artifact"
      },
      "ArtifactUpdateTO": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          }
        },
        "description": "Client created object for updating accessible properties of an artifact"
      },
      "ArtifactTO": {
        "required": [
          "createdDate",
          "description",
          "fileType",
          "id",
          "name",
          "repositoryId",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "repositoryId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "fileType": {
            "type": "string"
          },
          "lockedBy": {
            "type": "string"
          },
          "lockedUntil": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Containing metadata for an artifact"
      },
      "UserInfoTO": {
        "required": [
          "id",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "description": "Containing all information about an user"
      },
      "UserTO": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          }
        },
        "description": "Simplified user object only containing username"
      },
      "NewRepositoryTO": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Client created object for creating a new repository"
      },
      "ArtifactMilestoneUploadTO": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "file": {
            "type": "string"
          }
        },
        "description": "Client created object for uploading a version from the client"
      },
      "NewDeploymentTO": {
        "required": [
          "artifactId",
          "milestoneId",
          "repositoryId",
          "target"
        ],
        "type": "object",
        "properties": {
          "repositoryId": {
            "type": "string"
          },
          "artifactId": {
            "type": "string"
          },
          "milestoneId": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        },
        "description": "Client created object containing the deployment target and artifact(-version) id(-s) for creating a new deployment"
      },
      "NewArtifactTO": {
        "required": [
          "description",
          "fileType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          }
        },
        "description": "Client created object for creating a new artifact"
      },
      "SharedRepositoryTO": {
        "required": [
          "artifactId",
          "repositoryId",
          "role"
        ],
        "type": "object",
        "properties": {
          "artifactId": {
            "type": "string"
          },
          "repositoryId": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "OWNER",
              "ADMIN",
              "MEMBER",
              "VIEWER"
            ]
          },
          "artifactName": {
            "type": "string"
          },
          "repositoryName": {
            "type": "string"
          }
        }
      },
      "ArtifactTypeTO": {
        "required": [
          "fileExtension",
          "name",
          "svgIcon",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "fileExtension": {
            "type": "string"
          },
          "svgIcon": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "description": "Specifies properties for supported file types"
      }
    }
  }
}
